@model IEnumerable<AuthWebApp.Models.Assignment>

@{
    ViewData["Title"] = "Assignments";
}

<div class="container py-4">
    <h2>@ViewData["Title"]</h2>
    
    <div class="row mb-4">
        <div class="col-md-12">
            <p class="lead">View and submit your assignments</p>
        </div>
    </div>
    
    <div class="row">
        <div class="col-md-12">
            @if (Model != null && Model.Any())
            {
                <div class="card">
                    <div class="card-body">
                        <ul class="nav nav-tabs mb-4" id="assignmentTabs" role="tablist">
                            <li class="nav-item" role="presentation">
                                <button class="nav-link active" id="pending-tab" data-bs-toggle="tab" data-bs-target="#pending-assignments" type="button" role="tab" aria-controls="pending-assignments" aria-selected="true">
                                    Pending
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="submitted-tab" data-bs-toggle="tab" data-bs-target="#submitted-assignments" type="button" role="tab" aria-controls="submitted-assignments" aria-selected="false">
                                    Submitted
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="graded-tab" data-bs-toggle="tab" data-bs-target="#graded-assignments" type="button" role="tab" aria-controls="graded-assignments" aria-selected="false">
                                    Graded
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="overdue-tab" data-bs-toggle="tab" data-bs-target="#overdue-assignments" type="button" role="tab" aria-controls="overdue-assignments" aria-selected="false">
                                    Overdue
                                </button>
                            </li>
                        </ul>
                        <div class="tab-content" id="assignmentTabsContent">
                            <!-- Pending Assignments Tab -->
                            <div class="tab-pane fade show active" id="pending-assignments" role="tabpanel" aria-labelledby="pending-tab">
                                <div class="table-responsive">
                                    <table class="table table-hover">
                                        <thead>
                                            <tr>
                                                <th>Title</th>
                                                <th>Course</th>
                                                <th>Due Date</th>
                                                <th>Time Left</th>
                                                <th>Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @{
                                                var pendingAssignments = Model.Where(a => a.SubmissionDate == null && a.DueDate >= DateTime.Today).ToList();
                                            }
                                            @if (pendingAssignments.Any())
                                            {
                                                foreach (var assignment in pendingAssignments.OrderBy(a => a.DueDate))
                                                {
                                                    var daysLeft = (assignment.DueDate - DateTime.Today).Days;
                                                    <tr>
                                                        <td>@assignment.Title</td>
                                                        <td>@assignment.Course.Title</td>
                                                        <td>@assignment.DueDate.ToShortDateString()</td>
                                                        <td>
                                                            <span class="@(daysLeft < 3 ? "text-danger" : "text-success")">
                                                                @if (daysLeft == 0)
                                                                {
                                                                    <span>Due today!</span>
                                                                }
                                                                else if (daysLeft == 1)
                                                                {
                                                                    <span>Due tomorrow!</span>
                                                                }
                                                                else
                                                                {
                                                                    <span>@daysLeft days left</span>
                                                                }
                                                            </span>
                                                        </td>
                                                        <td>
                                                            <a asp-action="SubmitAssignment" asp-route-id="@assignment.AssignmentId" class="btn btn-sm btn-primary">Submit</a>
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                            else
                                            {
                                                <tr>
                                                    <td colspan="5" class="text-center">No pending assignments.</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            
                            <!-- Submitted Assignments Tab -->
                            <div class="tab-pane fade" id="submitted-assignments" role="tabpanel" aria-labelledby="submitted-tab">
                                <div class="table-responsive">
                                    <table class="table table-hover">
                                        <thead>
                                            <tr>
                                                <th>Title</th>
                                                <th>Course</th>
                                                <th>Due Date</th>
                                                <th>Submission Date</th>
                                                <th>File</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @{
                                                var submittedAssignments = Model.Where(a => a.SubmissionDate != null && !a.Grade.HasValue).ToList();
                                            }
                                            @if (submittedAssignments.Any())
                                            {
                                                foreach (var assignment in submittedAssignments.OrderByDescending(a => a.SubmissionDate))
                                                {
                                                    <tr>
                                                        <td>@assignment.Title</td>
                                                        <td>@assignment.Course.Title</td>
                                                        <td>@assignment.DueDate.ToShortDateString()</td>
                                                        <td>@assignment.SubmissionDate?.ToShortDateString()</td>
                                                        <td>
                                                            @if (!string.IsNullOrEmpty(assignment.FilePath))
                                                            {
                                                                <a href="@assignment.FilePath" target="_blank" class="btn btn-sm btn-outline-primary">View File</a>
                                                            }
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                            else
                                            {
                                                <tr>
                                                    <td colspan="5" class="text-center">No submitted assignments waiting for grading.</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            
                            <!-- Graded Assignments Tab -->
                            <div class="tab-pane fade" id="graded-assignments" role="tabpanel" aria-labelledby="graded-tab">
                                <div class="table-responsive">
                                    <table class="table table-hover">
                                        <thead>
                                            <tr>
                                                <th>Title</th>
                                                <th>Course</th>
                                                <th>Submission Date</th>
                                                <th>Grade</th>
                                                <th>Feedback</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @{
                                                var gradedAssignments = Model.Where(a => a.Grade.HasValue).ToList();
                                            }
                                            @if (gradedAssignments.Any())
                                            {
                                                foreach (var assignment in gradedAssignments.OrderByDescending(a => a.SubmissionDate))
                                                {
                                                    <tr>
                                                        <td>@assignment.Title</td>
                                                        <td>@assignment.Course.Title</td>
                                                        <td>@assignment.SubmissionDate?.ToShortDateString()</td>
                                                        <td>
                                                            <span class="badge bg-@(assignment.Grade >= 80 ? "success" : (assignment.Grade >= 70 ? "primary" : (assignment.Grade >= 60 ? "warning" : "danger")))">
                                                                @assignment.Grade?.ToString("F1")%
                                                            </span>
                                                        </td>
                                                        <td>
                                                            <button type="button" class="btn btn-sm btn-outline-info" data-bs-toggle="modal" data-bs-target="#feedbackModal-@assignment.AssignmentId">
                                                                View Feedback
                                                            </button>
                                                            
                                                            <!-- Feedback Modal -->
                                                            <div class="modal fade" id="feedbackModal-@assignment.AssignmentId" tabindex="-1" aria-labelledby="feedbackModalLabel-@assignment.AssignmentId" aria-hidden="true">
                                                                <div class="modal-dialog">
                                                                    <div class="modal-content">
                                                                        <div class="modal-header">
                                                                            <h5 class="modal-title" id="feedbackModalLabel-@assignment.AssignmentId">Feedback for @assignment.Title</h5>
                                                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                                        </div>
                                                                        <div class="modal-body">
                                                                            <p>@(assignment.Feedback ?? "No feedback provided.")</p>
                                                                        </div>
                                                                        <div class="modal-footer">
                                                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                            else
                                            {
                                                <tr>
                                                    <td colspan="5" class="text-center">No graded assignments yet.</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            
                            <!-- Overdue Assignments Tab -->
                            <div class="tab-pane fade" id="overdue-assignments" role="tabpanel" aria-labelledby="overdue-tab">
                                <div class="table-responsive">
                                    <table class="table table-hover">
                                        <thead>
                                            <tr>
                                                <th>Title</th>
                                                <th>Course</th>
                                                <th>Due Date</th>
                                                <th>Days Overdue</th>
                                                <th>Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @{
                                                var overdueAssignments = Model.Where(a => a.SubmissionDate == null && a.DueDate < DateTime.Today).ToList();
                                            }
                                            @if (overdueAssignments.Any())
                                            {
                                                foreach (var assignment in overdueAssignments.OrderBy(a => a.DueDate))
                                                {
                                                    var daysOverdue = (DateTime.Today - assignment.DueDate).Days;
                                                    <tr>
                                                        <td>@assignment.Title</td>
                                                        <td>@assignment.Course.Title</td>
                                                        <td>@assignment.DueDate.ToShortDateString()</td>
                                                        <td>
                                                            <span class="text-danger">@daysOverdue days overdue</span>
                                                        </td>
                                                        <td>
                                                            <a asp-action="SubmitAssignment" asp-route-id="@assignment.AssignmentId" class="btn btn-sm btn-warning">Submit Late</a>
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                            else
                                            {
                                                <tr>
                                                    <td colspan="5" class="text-center">No overdue assignments.</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    <p class="mb-0">No assignments found for your courses.</p>
                </div>
            }
        </div>
    </div>
</div> 