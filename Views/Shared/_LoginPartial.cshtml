@using Microsoft.AspNetCore.Identity
@inject UserManager<AuthWebApp.Models.ApplicationUser> UserManager
@inject SignInManager<AuthWebApp.Models.ApplicationUser> SignInManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="bi bi-person-circle me-1"></i>
                @(user?.FirstName ?? User.Identity.Name)
            </a>
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdown">
                @if (User.IsInRole("Student"))
                {
                    <li><a class="dropdown-item" asp-controller="Student" asp-action="Profile">My Profile</a></li>
                }
                else if (User.IsInRole("Faculty"))
                {
                    <li><a class="dropdown-item" asp-controller="Faculty" asp-action="Profile">My Profile</a></li>
                }
                else if (User.IsInRole("Admin"))
                {
                    <li><a class="dropdown-item" asp-controller="Admin" asp-action="Profile">My Profile</a></li>
                }
                <li><hr class="dropdown-divider"></li>
                <li>
                    <form asp-controller="Account" asp-action="Logout" method="post" id="logoutForm">
                        <button type="submit" class="dropdown-item">
                            <i class="bi bi-box-arrow-right me-1"></i> Logout
                        </button>
                    </form>
                </li>
            </ul>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="btn btn-primary ms-2 px-3" asp-controller="Account" asp-action="Login">
                <i class="bi bi-box-arrow-in-right me-1"></i> Login
            </a>
        </li>
    }
</ul> 